<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux-Centos7安装、使用及问题</title>
      <link href="/2019/03/18/linux-Centos7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98/"/>
      <url>/2019/03/18/linux-Centos7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>&ensp; &ensp; <strong>写在前面：</strong>Centos7 U盘安装、虚拟安装及部署所遇问题。U盘安装直接IOS写入即可，避免FAT32大小问题。如果安装顺利，恭喜直接享用；如果不幸重启各种故障，不要各种百度，也不用求Google，根据我的经验，最好的方式是<strong>重装</strong>，根据下方教程耐心尝试几次，虚拟安装和多系统、或单系统安装过程没区别。U盘安装可能会遇到之前写入镜像文件的U盘插入其它电脑无法使用现象，不用担心，这里最直接的方法是下载老毛桃之类软件，<strong>强制初始化</strong>U盘就OK。</p><p>强烈推荐-鸟哥的linux私房菜 <a href="http://cn.linux.vbird.org/" target="_blank" rel="noopener">http://cn.linux.vbird.org/</a><br>VMware安装Centos7超详细过程（图文） <a href="https://blog.csdn.net/babyxue/article/details/80970526" target="_blank" rel="noopener">https://blog.csdn.net/babyxue/article/details/80970526</a><br><a href="https://blog.csdn.net/u013168176/article/details/81144193" target="_blank" rel="noopener">https://blog.csdn.net/u013168176/article/details/81144193</a><br>将个人笔记本改造成Linux简易服务器 <a href="https://www.jianshu.com/p/7dc15bc448c7" target="_blank" rel="noopener">https://www.jianshu.com/p/7dc15bc448c7</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos7安装 </tag>
            
            <tag> centos7服务器搭建 </tag>
            
            <tag> centos7问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Superset安装部署及Echarts接入</title>
      <link href="/2019/01/23/superset%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%8F%8Aecharts%E6%8E%A5%E5%85%A5/"/>
      <url>/2019/01/23/superset%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E5%8F%8Aecharts%E6%8E%A5%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>&ensp; &ensp; <strong>写在前面：</strong>superset上手非常简易，二次开发要求较高。superset本身依赖Python模块就很多，开发需要深入理解核心模块源码，当然对前端要求也高。通过superset可视化dashboard足以支持一般公司业务需求，更多个性化需求就需要前端开发肝了。百度echarts丰富的map也可以做些补充。相对来说echarts接入较为简单，但是由于不懂前端，这里虽然照做了几遍，重新登录依旧刷不出新图，之后突然意识到要重新编译前端源码，在<code>/assets/</code>下执行<code>npm run dev</code>（注：这里可能会报错，根据错误百度修改），再次重登superset就可以了。</p><ul><li><strong>推荐-superset官方手册 <a href="http://superset.apache.org/tutorial.html" target="_blank" rel="noopener">http://superset.apache.org/tutorial.html</a></strong></li><li>Superset的安装配置及基础使用手册 <a href="https://blog.csdn.net/folecld123/article/details/80705616" target="_blank" rel="noopener">https://blog.csdn.net/folecld123/article/details/80705616</a><br>Superset在Winodw安装以及问题整理 <a href="https://www.cnblogs.com/Jonecmnn/p/7417498.html" target="_blank" rel="noopener">https://www.cnblogs.com/Jonecmnn/p/7417498.html</a></li><li>uperset集成kylin2.5.0 <a href="https://www.liangzl.com/get-article-detail-34757.html" target="_blank" rel="noopener">https://www.liangzl.com/get-article-detail-34757.html</a></li><li>推荐-Superset二次开发（全面） <a href="https://blog.csdn.net/oASiDuoFu/article/details/80525651" target="_blank" rel="noopener">https://blog.csdn.net/oASiDuoFu/article/details/80525651</a></li><li><strong>推荐-Superset集成Echarts并调整数据接口-更新0.28.1 <a href="https://zhuanlan.zhihu.com/p/46992404" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/46992404</a></strong></li><li>superset接入可视化echarts图表（Py2、0.28以前） <a href="https://juejin.im/post/5cde1210f265da03b8587776" target="_blank" rel="noopener">https://juejin.im/post/5cde1210f265da03b8587776</a></li><li>superset的安装以及和echart整合（superset0.28以前） <a href="https://blog.csdn.net/lzlnd/article/details/85167270" target="_blank" rel="noopener">https://blog.csdn.net/lzlnd/article/details/85167270</a></li><li>superset云部署 <a href="https://www.jianshu.com/p/9ad7e29792dd" target="_blank" rel="noopener">https://www.jianshu.com/p/9ad7e29792dd</a></li><li>nginx+gunicorn+upstart方式部署 <a href="https://www.jianshu.com/p/28b42f27744a" target="_blank" rel="noopener">https://www.jianshu.com/p/28b42f27744a</a></li><li><strong>推荐-用Gunicorn部署Superset <a href="https://zhuanlan.zhihu.com/p/59321685" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/59321685</a></strong></li><li>Superset，开发者视角 <a href="https://zhuanlan.zhihu.com/c_100045590" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/c_100045590</a><br>superset二次开发 <a href="https://zhuanlan.zhihu.com/c_151634429" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/c_151634429</a><br><br></li></ul><h1 id="Echarts接入核心步骤-以下均来自知乎林余，感谢攻略！-："><a href="#Echarts接入核心步骤-以下均来自知乎林余，感谢攻略！-：" class="headerlink" title="Echarts接入核心步骤(以下均来自知乎林余，感谢攻略！)："></a><strong>Echarts接入核心步骤(以下均来自知乎<a href="https://zhuanlan.zhihu.com/p/46992404" target="_blank" rel="noopener">林余</a>，感谢攻略！)：</strong></h1><h2 id="1-superset-viz-py"><a href="#1-superset-viz-py" class="headerlink" title="1. superset\viz.py"></a>1. superset\viz.py</h2><p>后端处理前端传入数据，根据echarts官网数据格式，模仿其它模块修改接入图表类，主要修改get_data函数<br><figure class="highlight python"><figcaption><span>viz.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">echartsRadar</span><span class="params">(BaseViz)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">""" echarts radar viz """</span></span><br><span class="line"></span><br><span class="line">    viz_type = <span class="string">'echarts_radar'</span> <span class="comment"># 对应前端名字</span></span><br><span class="line">    verbose_name = _(<span class="string">'echarts_radar'</span>)</span><br><span class="line">    is_timeseries = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span><span class="params">(self, df)</span>:</span></span><br><span class="line">        data = self.handle_js_int_overflow(</span><br><span class="line">            dict(</span><br><span class="line">                records=df.to_dict(orient=<span class="string">'records'</span>),</span><br><span class="line">                columns=list(df.columns),</span><br><span class="line">            ))</span><br><span class="line">        columns_pre = [data[<span class="string">'records'</span>][i][data[<span class="string">'columns'</span>][<span class="number">0</span>]] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data[<span class="string">'records'</span>]))]</span><br><span class="line">        max_num = np.max([data[<span class="string">'records'</span>][i][data[<span class="string">'columns'</span>][<span class="number">1</span>]] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data[<span class="string">'records'</span>]))])</span><br><span class="line">        columns = [&#123;<span class="string">'name'</span>: columns_pre[i],</span><br><span class="line">                    <span class="string">'max'</span>:str(max_num)&#125;<span class="keyword">for</span> i <span class="keyword">in</span> range(len(columns_pre))]</span><br><span class="line">        out_data = [</span><br><span class="line">            &#123;<span class="string">'value'</span>: [data[<span class="string">'records'</span>][i][data[<span class="string">'columns'</span>][j+<span class="number">1</span>]] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data[<span class="string">'records'</span>]))],</span><br><span class="line">             <span class="string">'name'</span>:data[<span class="string">'columns'</span>][j+<span class="number">1</span>]&#125;<span class="keyword">for</span> j <span class="keyword">in</span> range(len(data[<span class="string">'columns'</span>])<span class="number">-1</span>)</span><br><span class="line">        ]</span><br><span class="line">        <span class="keyword">return</span> [&#123;<span class="string">'indicator'</span> : columns, <span class="string">'data'</span> : out_data&#125;]</span><br></pre></td></tr></table></figure></p><h2 id="2-superset-static-assets-src-visualizations"><a href="#2-superset-static-assets-src-visualizations" class="headerlink" title="2. superset\static\assets\src\visualizations\"></a>2. superset\static\assets\src\visualizations\</h2><p>前端图标配置文件，也是对接echarts库的文件</p><ul><li>superset\static\assets\src\visualizations\EchartsMap(新增图表文件夹名)  (注：可以把echarts不同类型图表放到一个文件夹下处理，便于管理)</li><li>superset\static\assets\src\visualizations\EchartsMap(新增图表文件夹名)\images  (注：superset图表展示用，从echarts官网直接取图即可，像素大小不影响)</li><li>superset\static\assets\src\visualizations\EchartsMap(新增图表文件夹名)\echarts_radar(新增图表名称).js<figure class="highlight javascript"><figcaption><span>echarts_radar(新增图表名称).js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">'echarts'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">echartsAngularGaugeVis</span>(<span class="params">slice, payload</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> div = d3.select(slice.selector);</span><br><span class="line">    <span class="keyword">const</span> sliceId = <span class="string">'echarts_slice_'</span> + slice.formData.slice_id;</span><br><span class="line">    <span class="keyword">const</span> html = <span class="string">'&lt;div id='</span> + sliceId + <span class="string">' style="width:'</span> + slice.width() + <span class="string">'px;height:'</span> + slice.height() + <span class="string">'px;"&gt;&lt;/div&gt;'</span>;</span><br><span class="line">    div.html(html); <span class="comment">// reset</span></span><br><span class="line">    </span><br><span class="line">   <span class="keyword">const</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(sliceId));</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// const fd = slice.formData;</span></span><br><span class="line">   <span class="keyword">const</span> params = payload.data; <span class="comment">//这是从后端viz.py获取数据的标准写法</span></span><br><span class="line">   <span class="keyword">const</span> indicator = params[<span class="number">0</span>][<span class="string">"indicator"</span>] <span class="comment">//因为雷达图有两个地方要用到后端传来的数据，根据处理过的数据格式取出来</span></span><br><span class="line">    <span class="keyword">const</span> data = params[<span class="number">0</span>][<span class="string">"data"</span>] <span class="comment">//同上</span></span><br><span class="line">    <span class="keyword">const</span> dataName = [];  <span class="comment">// echarts需要的是两个数组</span></span><br><span class="line"><span class="comment">//以下开始是从echarts官网抄的，当然也可以自己设置，可以对比这一段跟官网的设置（增加了tooltip显示规则和label)</span></span><br><span class="line">    <span class="keyword">const</span> option = &#123;</span><br><span class="line">        tooltip : &#123;</span><br><span class="line">            <span class="comment">// trigger: 'item',</span></span><br><span class="line">            <span class="comment">// formatter: '&#123;a&#125;, &#123;b&#125;，&#123;c&#125;，&#123;d&#125;，&#123;e&#125;'</span></span><br><span class="line">            position: <span class="function"><span class="keyword">function</span> (<span class="params">pos, params, dom, rect, size</span>) </span>&#123;</span><br><span class="line">                <span class="comment">// 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。</span></span><br><span class="line">                <span class="keyword">var</span> obj = &#123;<span class="attr">top</span>: <span class="number">60</span>&#125;;</span><br><span class="line">                obj[[<span class="string">'left'</span>, <span class="string">'right'</span>][+(pos[<span class="number">0</span>] &lt; size.viewSize[<span class="number">0</span>] / <span class="number">2</span>)]] = <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">return</span> obj;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        legend: &#123;</span><br><span class="line">            orient : <span class="string">'vertical'</span>,</span><br><span class="line">            x : <span class="string">'right'</span>,</span><br><span class="line">            y : <span class="string">'bottom'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        toolbox: &#123;</span><br><span class="line">            show : <span class="literal">true</span>,</span><br><span class="line">            feature : &#123;</span><br><span class="line">                mark : &#123;<span class="attr">show</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">                dataView : &#123;<span class="attr">show</span>: <span class="literal">true</span>, <span class="attr">readOnly</span>: <span class="literal">false</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        radar : &#123;</span><br><span class="line">            indicator: indicator,</span><br><span class="line">            name: &#123;</span><br><span class="line">                textStyle: &#123;</span><br><span class="line">                    color: <span class="string">'#454545'</span>,</span><br><span class="line">                    borderRadius: <span class="number">3</span>,</span><br><span class="line">                    padding: [<span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        series : [</span><br><span class="line">            &#123;</span><br><span class="line">                type : <span class="string">'radar'</span>,</span><br><span class="line">                data : data,</span><br><span class="line">                label: &#123;</span><br><span class="line">                    show: <span class="literal">true</span>,</span><br><span class="line">                    position: [<span class="string">'150%'</span>, <span class="string">'150%'</span>],</span><br><span class="line">                    distance: <span class="number">10</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br><span class="line">  <span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span><br><span class="line">  myChart.setOption(option);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = echartsAngularGaugeVis;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-superset-static-assets-src-visualizations-index-js"><a href="#3-superset-static-assets-src-visualizations-index-js" class="headerlink" title="3. superset\static\assets\src\visualizations\index.js"></a>3. superset\static\assets\src\visualizations\index.js</h2><p>主要用来前端后端函数匹配，参照存在格式添加VIZ_TYPES和vizMap，该步简单<br><figure class="highlight plain"><figcaption><span>VIZ_TYPES</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export const VIZ_TYPES = &#123;</span><br><span class="line">    ……</span><br><span class="line">    echarts_radar: &apos;echarts_radar&apos;, //此行新增</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br><figure class="highlight plain"><figcaption><span>vizMap</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const vizMap = &#123;</span><br><span class="line">    ……</span><br><span class="line">    [VIZ_TYPES.echarts_radar]: () =&gt; loadVis(import(&apos;./EchartsMap/echarts_radar.js&apos;)),//此行新增</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="4-superset-static-assets-src-explore-visTypes-jsx"><a href="#4-superset-static-assets-src-explore-visTypes-jsx" class="headerlink" title="4. superset\static\assets\src\explore\visTypes.jsx"></a>4. superset\static\assets\src\explore\visTypes.jsx</h2><p>前端图标配置区组件设置，就是superset左侧的groupby、metrics等组件的开关，需根据配置的图表需要的数据格式选择合适的组件<br><figure class="highlight plain"><figcaption><span>visTypes.jsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">export const visTypes = &#123;</span><br><span class="line">    ……</span><br><span class="line">    echarts_radar: &#123;</span><br><span class="line">        label: t(&apos;echarts_radar&apos;),</span><br><span class="line">        showOnExplore: true,</span><br><span class="line">        controlPanelSections: [</span><br><span class="line">            &#123;</span><br><span class="line">                label: t(&apos;Query&apos;),</span><br><span class="line">                expanded: true, //主要是下面的部分，可以找superset原有的图表模板，通过查看sql的方式看看每个配件都是做什么的</span><br><span class="line">                controlSetRows: [</span><br><span class="line">                    [&apos;metrics&apos;],</span><br><span class="line">                    [&apos;columns&apos;],</span><br><span class="line">                    [&apos;adhoc_filters&apos;],</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></p><h2 id="5-重新编译前端源代码"><a href="#5-重新编译前端源代码" class="headerlink" title="5. 重新编译前端源代码"></a>5. 重新编译前端源代码</h2><p>在<code>/assets/</code>下执行<code>npm run dev</code>，再次重登superset。</p>]]></content>
      
      
      <categories>
          
          <category> 可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> superset </tag>
            
            <tag> echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2019/01/21/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/01/21/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>&ensp; &ensp; <strong>写在前面：</strong>整理常用正则表达式规则，以作参考。以下代码均通过Python re模块实现。</p><p><a href="http://tool.oschina.net/regex/" target="_blank" rel="noopener">正则表达式在线测试</a></p><p><strong><em>以下内容均来源于崔庆才大神爬虫教程</em></strong></p><hr><h2 id="常见匹配模式"><a href="#常见匹配模式" class="headerlink" title="常见匹配模式"></a>常见匹配模式</h2><div class="table-container"><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>\w</td><td>匹配字母数字及下划线</td></tr><tr><td>\W</td><td>匹配非字母数字下划线</td></tr><tr><td>\s</td><td>匹配任意空白字符，等价于 [\t\n\r\f].</td></tr><tr><td>\S</td><td>匹配任意非空字符</td></tr><tr><td>\d</td><td>匹配任意数字，等价于 [0-9]</td></tr><tr><td>\D</td><td>匹配任意非数字</td></tr><tr><td>\A</td><td>匹配字符串开始</td></tr><tr><td>\Z</td><td>匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串</td></tr><tr><td>\z</td><td>匹配字符串结束</td></tr><tr><td>\G</td><td>匹配最后匹配完成的位置</td></tr><tr><td>\n</td><td>匹配一个换行符</td></tr><tr><td>\t</td><td>匹配一个制表符</td></tr><tr><td>^</td><td>匹配字符串的开头</td></tr><tr><td>$</td><td>匹配字符串的末尾。</td></tr><tr><td>.</td><td>匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。</td></tr><tr><td>[…]</td><td>用来表示一组字符,单独列出：[amk] 匹配 ‘a’，’m’或’k’</td></tr><tr><td>[^…]</td><td>不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。</td></tr><tr><td>*</td><td>匹配0个或多个的表达式。</td></tr><tr><td>+</td><td>匹配1个或多个的表达式。</td></tr><tr><td>?</td><td>匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式</td></tr><tr><td>{n}</td><td>精确匹配n个前面表达式。</td></tr><tr><td>{n, m}</td><td>匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</td></tr><tr><td>a&#124;b</td><td>匹配a或b</td></tr><tr><td>( )</td><td>匹配括号内的表达式，也表示一个组</td></tr></tbody></table></div><h2 id="re-match"><a href="#re-match" class="headerlink" title="re.match"></a>re.match</h2><p>re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。<br>re.match(pattern, string, flags=0)</p><h3 id="最常规的匹配"><a href="#最常规的匹配" class="headerlink" title="最常规的匹配"></a>最常规的匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 123 4567 World_This is a Regex Demo'</span></span><br><span class="line">print(len(content))</span><br><span class="line">result = re.match(<span class="string">'^Hello\s\d\d\d\s\d&#123;4&#125;\s\w&#123;10&#125;.*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group())</span><br><span class="line">print(result.span())</span><br></pre></td></tr></table></figure><pre><code>41&lt;_sre.SRE_Match object; span=(0, 41), match=&#39;Hello 123 4567 World_This is a Regex Demo&#39;&gt;Hello 123 4567 World_This is a Regex Demo(0, 41)</code></pre><h3 id="泛匹配"><a href="#泛匹配" class="headerlink" title="泛匹配"></a>泛匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 123 4567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^Hello.*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group())</span><br><span class="line">print(result.span())</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 41), match=&#39;Hello 123 4567 World_This is a Regex Demo&#39;&gt;Hello 123 4567 World_This is a Regex Demo(0, 41)</code></pre><h3 id="匹配目标"><a href="#匹配目标" class="headerlink" title="匹配目标"></a>匹配目标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^Hello\s(\d+)\sWorld.*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br><span class="line">print(result.span())</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&#39;Hello 1234567 World_This is a Regex Demo&#39;&gt;1234567(0, 40)</code></pre><h3 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^He.*(\d+).*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&#39;Hello 1234567 World_This is a Regex Demo&#39;&gt;7</code></pre><h3 id="非贪婪匹配"><a href="#非贪婪匹配" class="headerlink" title="非贪婪匹配"></a>非贪婪匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Hello 1234567 World_This is a Regex Demo'</span></span><br><span class="line">result = re.match(<span class="string">'^He.*?(\d+).*Demo$'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&#39;Hello 1234567 World_This is a Regex Demo&#39;&gt;1234567</code></pre><h3 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a>匹配模式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'''Hello 1234567 World_This</span></span><br><span class="line"><span class="string">is a Regex Demo</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">result = re.match(<span class="string">'^He.*?(\d+).*?Demo$'</span>, content, re.S)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>1234567</code></pre><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'price is $5.00'</span></span><br><span class="line">result = re.match(<span class="string">'price is $5.00'</span>, content)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>None</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'price is $5.00'</span></span><br><span class="line">result = re.match(<span class="string">'price is \$5\.00'</span>, content)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 14), match=&#39;price is $5.00&#39;&gt;</code></pre><p>总结：尽量使用泛匹配、使用括号得到匹配目标、尽量使用非贪婪模式、有换行符就用re.S</p><h2 id="re-search"><a href="#re-search" class="headerlink" title="re.search"></a>re.search</h2><p>re.search 扫描整个字符串并返回第一个成功的匹配。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></span><br><span class="line">result = re.match(<span class="string">'Hello.*?(\d+).*?Demo'</span>, content)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>None</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></span><br><span class="line">result = re.search(<span class="string">'Hello.*?(\d+).*?Demo'</span>, content)</span><br><span class="line">print(result)</span><br><span class="line">print(result.group(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(13, 53), match=&#39;Hello 1234567 World_This is a Regex Demo&#39;&gt;1234567</code></pre><p>总结：为匹配方便，能用search就不用match</p><h3 id="匹配演练"><a href="#匹配演练" class="headerlink" title="匹配演练"></a>匹配演练</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;&lt;i class="fa fa-user"&gt;&lt;/i&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br><span class="line">result = re.search(<span class="string">'&lt;li.*?active.*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html, re.S)</span><br><span class="line"><span class="keyword">if</span> result:</span><br><span class="line">    print(result.group(<span class="number">1</span>), result.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><pre><code>齐秦 往事随风</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br><span class="line">result = re.search(<span class="string">'&lt;li.*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html, re.S)</span><br><span class="line"><span class="keyword">if</span> result:</span><br><span class="line">    print(result.group(<span class="number">1</span>), result.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><pre><code>任贤齐 沧海一声笑</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br><span class="line">result = re.search(<span class="string">'&lt;li.*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html)</span><br><span class="line"><span class="keyword">if</span> result:</span><br><span class="line">    print(result.group(<span class="number">1</span>), result.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><pre><code>beyond 光辉岁月</code></pre><h2 id="re-findall"><a href="#re-findall" class="headerlink" title="re.findall"></a>re.findall</h2><p>搜索字符串，以列表形式返回全部能匹配的子串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br><span class="line">results = re.findall(<span class="string">'&lt;li.*?href="(.*?)".*?singer="(.*?)"&gt;(.*?)&lt;/a&gt;'</span>, html, re.S)</span><br><span class="line">print(results)</span><br><span class="line">print(type(results))</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    print(result)</span><br><span class="line">    print(result[<span class="number">0</span>], result[<span class="number">1</span>], result[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><pre><code>[(&#39;/2.mp3&#39;, &#39;任贤齐&#39;, &#39;沧海一声笑&#39;), (&#39;/3.mp3&#39;, &#39;齐秦&#39;, &#39;往事随风&#39;), (&#39;/4.mp3&#39;, &#39;beyond&#39;, &#39;光辉岁月&#39;), (&#39;/5.mp3&#39;, &#39;陈慧琳&#39;, &#39;记事本&#39;), (&#39;/6.mp3&#39;, &#39;邓丽君&#39;, &#39;但愿人长久&#39;)]&lt;class &#39;list&#39;&gt;(&#39;/2.mp3&#39;, &#39;任贤齐&#39;, &#39;沧海一声笑&#39;)/2.mp3 任贤齐 沧海一声笑(&#39;/3.mp3&#39;, &#39;齐秦&#39;, &#39;往事随风&#39;)/3.mp3 齐秦 往事随风(&#39;/4.mp3&#39;, &#39;beyond&#39;, &#39;光辉岁月&#39;)/4.mp3 beyond 光辉岁月(&#39;/5.mp3&#39;, &#39;陈慧琳&#39;, &#39;记事本&#39;)/5.mp3 陈慧琳 记事本(&#39;/6.mp3&#39;, &#39;邓丽君&#39;, &#39;但愿人长久&#39;)/6.mp3 邓丽君 但愿人长久</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br><span class="line">results = re.findall(<span class="string">'&lt;li.*?&gt;\s*?(&lt;a.*?&gt;)?(\w+)(&lt;/a&gt;)?\s*?&lt;/li&gt;'</span>, html, re.S)</span><br><span class="line">print(results)</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    print(result[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><pre><code>[(&#39;&#39;, &#39;一路上有你&#39;, &#39;&#39;), (&#39;&lt;a href=&quot;/2.mp3&quot; singer=&quot;任贤齐&quot;&gt;&#39;, &#39;沧海一声笑&#39;, &#39;&lt;/a&gt;&#39;), (&#39;&lt;a href=&quot;/3.mp3&quot; singer=&quot;齐秦&quot;&gt;&#39;, &#39;往事随风&#39;, &#39;&lt;/a&gt;&#39;), (&#39;&lt;a href=&quot;/4.mp3&quot; singer=&quot;beyond&quot;&gt;&#39;, &#39;光辉岁月&#39;, &#39;&lt;/a&gt;&#39;), (&#39;&lt;a href=&quot;/5.mp3&quot; singer=&quot;陈慧琳&quot;&gt;&#39;, &#39;记事本&#39;, &#39;&lt;/a&gt;&#39;), (&#39;&lt;a href=&quot;/6.mp3&quot; singer=&quot;邓丽君&quot;&gt;&#39;, &#39;但愿人长久&#39;, &#39;&lt;/a&gt;&#39;)]一路上有你沧海一声笑往事随风光辉岁月记事本但愿人长久</code></pre><h3 id="re-sub"><a href="#re-sub" class="headerlink" title="re.sub"></a>re.sub</h3><p>替换字符串中每一个匹配的子串后返回替换后的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></span><br><span class="line">content = re.sub(<span class="string">'\d+'</span>, <span class="string">''</span>, content)</span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure><pre><code>Extra stings Hello  World_This is a Regex Demo Extra stings</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></span><br><span class="line">content = re.sub(<span class="string">'\d+'</span>, <span class="string">'Replacement'</span>, content)</span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure><pre><code>Extra stings Hello Replacement World_This is a Regex Demo Extra stings</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'Extra stings Hello 1234567 World_This is a Regex Demo Extra stings'</span></span><br><span class="line">content = re.sub(<span class="string">'(\d+)'</span>, <span class="string">r'\1 8910'</span>, content)</span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure><pre><code>Extra stings Hello 1234567 8910 World_This is a Regex Demo Extra stings</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = <span class="string">'''&lt;div id="songs-list"&gt;</span></span><br><span class="line"><span class="string">    &lt;h2 class="title"&gt;经典老歌&lt;/h2&gt;</span></span><br><span class="line"><span class="string">    &lt;p class="introduction"&gt;</span></span><br><span class="line"><span class="string">        经典老歌列表</span></span><br><span class="line"><span class="string">    &lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;ul id="list" class="list-group"&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="2"&gt;一路上有你&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="7"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/2.mp3" singer="任贤齐"&gt;沧海一声笑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="4" class="active"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/3.mp3" singer="齐秦"&gt;往事随风&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="6"&gt;&lt;a href="/4.mp3" singer="beyond"&gt;光辉岁月&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;&lt;a href="/5.mp3" singer="陈慧琳"&gt;记事本&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">        &lt;li data-view="5"&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="/6.mp3" singer="邓丽君"&gt;但愿人长久&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;'''</span></span><br><span class="line">html = re.sub(<span class="string">'&lt;a.*?&gt;|&lt;/a&gt;'</span>, <span class="string">''</span>, html)</span><br><span class="line">print(html)</span><br><span class="line">results = re.findall(<span class="string">'&lt;li.*?&gt;(.*?)&lt;/li&gt;'</span>, html, re.S)</span><br><span class="line">print(results)</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    print(result.strip())</span><br></pre></td></tr></table></figure><pre><code>&lt;div id=&quot;songs-list&quot;&gt;    &lt;h2 class=&quot;title&quot;&gt;经典老歌&lt;/h2&gt;    &lt;p class=&quot;introduction&quot;&gt;        经典老歌列表    &lt;/p&gt;    &lt;ul id=&quot;list&quot; class=&quot;list-group&quot;&gt;        &lt;li data-view=&quot;2&quot;&gt;一路上有你&lt;/li&gt;        &lt;li data-view=&quot;7&quot;&gt;            沧海一声笑        &lt;/li&gt;        &lt;li data-view=&quot;4&quot; class=&quot;active&quot;&gt;            往事随风        &lt;/li&gt;        &lt;li data-view=&quot;6&quot;&gt;光辉岁月&lt;/li&gt;        &lt;li data-view=&quot;5&quot;&gt;记事本&lt;/li&gt;        &lt;li data-view=&quot;5&quot;&gt;            但愿人长久        &lt;/li&gt;    &lt;/ul&gt;&lt;/div&gt;[&#39;一路上有你&#39;, &#39;\n            沧海一声笑\n        &#39;, &#39;\n            往事随风\n        &#39;, &#39;光辉岁月&#39;, &#39;记事本&#39;, &#39;\n            但愿人长久\n        &#39;]一路上有你沧海一声笑往事随风光辉岁月记事本但愿人长久</code></pre><h2 id="re-compile"><a href="#re-compile" class="headerlink" title="re.compile"></a>re.compile</h2><p>将正则字符串编译成正则表达式对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将一个正则表达式串编译成正则对象，以便于复用该匹配模式</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">content = <span class="string">'''Hello 1234567 World_This</span></span><br><span class="line"><span class="string">is a Regex Demo'''</span></span><br><span class="line">pattern = re.compile(<span class="string">'Hello.*Demo'</span>, re.S)</span><br><span class="line">result = re.match(pattern, content)</span><br><span class="line"><span class="comment">#result = re.match('Hello.*Demo', content, re.S)</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><pre><code>&lt;_sre.SRE_Match object; span=(0, 40), match=&#39;Hello 1234567 World_This\nis a Regex Demo&#39;&gt;</code></pre><h2 id="实战练习"><a href="#实战练习" class="headerlink" title="实战练习"></a>实战练习</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">content = requests.get(<span class="string">'https://book.douban.com/'</span>).text</span><br><span class="line">pattern = re.compile(<span class="string">'&lt;li.*?cover.*?href="(.*?)".*?title="(.*?)".*?more-meta.*?author"&gt;(.*?)&lt;/span&gt;.*?year"&gt;(.*?)&lt;/span&gt;.*?&lt;/li&gt;'</span>, re.S)</span><br><span class="line">results = re.findall(pattern, content)</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> results:</span><br><span class="line">    url, name, author, date = result</span><br><span class="line">    author = re.sub(<span class="string">'\s'</span>, <span class="string">''</span>, author)</span><br><span class="line">    date = re.sub(<span class="string">'\s'</span>, <span class="string">''</span>, date)</span><br><span class="line">    print(url, name, author, date)</span><br></pre></td></tr></table></figure><pre><code>https://book.douban.com/subject/26925834/?icn=index-editionrecommend 别走出这一步 [英]S.J.沃森 2017-1https://book.douban.com/subject/26953532/?icn=index-editionrecommend 白先勇细说红楼梦 白先勇 2017-2-1https://book.douban.com/subject/26959159/?icn=index-editionrecommend 岁月凶猛 冯仑 2017-2https://book.douban.com/subject/26949210/?icn=index-editionrecommend 如果没有今天，明天会不会有昨天？ [瑞士]伊夫·博萨尔特（YvesBossart） 2017-1https://book.douban.com/subject/27001447/?icn=index-editionrecommend 人类这100年 阿夏 2017-2https://book.douban.com/subject/26864566/?icn=index-latestbook-subject 眼泪的化学 [澳]彼得·凯里 2017-2https://book.douban.com/subject/26991064/?icn=index-latestbook-subject 青年斯大林 [英]西蒙·蒙蒂菲奥里 2017-3https://book.douban.com/subject/26938056/?icn=index-latestbook-subject 带艾伯特回家 [美]霍默·希卡姆 2017-3https://book.douban.com/subject/26954757/?icn=index-latestbook-subject 乳房 [美]弗洛伦斯·威廉姆斯 2017-2https://book.douban.com/subject/26956479/?icn=index-latestbook-subject 草原动物园 马伯庸 2017-3https://book.douban.com/subject/26956018/?icn=index-latestbook-subject 贩卖音乐 [美]大卫·伊斯曼 2017-3-1https://book.douban.com/subject/26703649/?icn=index-latestbook-subject 被占的宅子 [阿根廷]胡利奥·科塔萨尔 2017-3https://book.douban.com/subject/26578402/?icn=index-latestbook-subject 信仰与观看 [法]罗兰·雷希特(RolandRecht) 2017-2-17https://book.douban.com/subject/26939171/?icn=index-latestbook-subject 妹妹的坟墓 [美]罗伯特·杜格尼(RobertDugoni) 2017-3-1https://book.douban.com/subject/26972465/?icn=index-latestbook-subject 全栈市场人 Lydia 2017-2-1https://book.douban.com/subject/26986928/?icn=index-latestbook-subject 终极X战警2 [英]马克·米勒&amp;nbsp;/&amp;nbsp;[美]亚当·库伯特 2017-3-15https://book.douban.com/subject/26948144/?icn=index-latestbook-subject 格调（修订第3版） [美]保罗·福塞尔（PaulFussell） 2017-2https://book.douban.com/subject/26945792/?icn=index-latestbook-subject 原谅石 [美]洛里·斯皮尔曼 2017-2https://book.douban.com/subject/26974207/?icn=index-latestbook-subject 庇护二世闻见录 [意]皮科洛米尼 2017-2https://book.douban.com/subject/26983143/?icn=index-latestbook-subject 遇见野兔的那一年 [芬]阿托·帕西林纳 2017-3-1https://book.douban.com/subject/26976429/?icn=index-latestbook-subject 鲍勃·迪伦：诗人之歌 [法]让-多米尼克·布里埃 2017-4https://book.douban.com/subject/26962860/?icn=index-latestbook-subject 牙医谋杀案 [英]阿加莎·克里斯蒂 2017-3https://book.douban.com/subject/26923022/?icn=index-latestbook-subject 石挥谈艺录：把生命交给舞台 石挥 2017-2https://book.douban.com/subject/26897190/?icn=index-latestbook-subject 理想 [美]安·兰德 2017-2https://book.douban.com/subject/26985981/?icn=index-latestbook-subject 青苔不会消失 袁凌 2017-4https://book.douban.com/subject/26984949/?icn=index-latestbook-subject 地下铁道 [美]科尔森·怀特黑德（ColsonWhitehead） 2017-3https://book.douban.com/subject/26944012/?icn=index-latestbook-subject 极简进步史 [英]罗纳德·赖特 2017-4-1https://book.douban.com/subject/26969002/?icn=index-latestbook-subject 驻马店伤心故事集 郑在欢 2017-2https://book.douban.com/subject/26854223/?icn=index-latestbook-subject 致薇拉 [美]弗拉基米尔·纳博科夫 2017-3https://book.douban.com/subject/26841616/?icn=index-latestbook-subject 北方档案 [法]玛格丽特·尤瑟纳尔 2017-2https://book.douban.com/subject/26980391/?icn=index-latestbook-subject 食帖15：便当灵感集 林江 2017-2https://book.douban.com/subject/26958882/?icn=index-latestbook-subject 生火 [法]克里斯多夫·夏布特（ChristopheChabouté）编绘 2017-3https://book.douban.com/subject/26989163/?icn=index-latestbook-subject 文明之光（第四册） 吴军 2017-3-1https://book.douban.com/subject/26878906/?icn=index-latestbook-subject 公牛山 [美]布赖恩·帕诺威奇 2017-2https://book.douban.com/subject/26989534/?icn=index-latestbook-subject 几乎消失的偷闲艺术 [加拿大]达尼·拉费里埃 2017-4https://book.douban.com/subject/26939973/?icn=index-latestbook-subject 散步去 [日]谷口治郎 2017-3https://book.douban.com/subject/26865333/?icn=index-latestbook-subject 中国1945 [美]理查德·伯恩斯坦(RichardBernstein) 2017-3-1https://book.douban.com/subject/26989242/?icn=index-latestbook-subject 有匪2：离恨楼 Priest 2017-3https://book.douban.com/subject/26985790/?icn=index-latestbook-subject 女人、火与危险事物 [美]乔治·莱考夫 2017-3https://book.douban.com/subject/26972277/?icn=index-latestbook-subject 寻找时间的人 [爱尔兰]凯特·汤普森 2017-3https://www.douban.com/note/610758170/ 白先勇细说红楼梦【全二册】 白先勇 2017-2-1https://read.douban.com/ebook/31540864/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 奇爱博士 [英]彼得·乔治 2016-8-1https://read.douban.com/ebook/31433872/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 在时光中盛开的女子 李筱懿 2017-3https://read.douban.com/ebook/31178635/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 如何高效记忆（原书第2版） [美]肯尼思•希格比（KennethL.Higbee） 2017-3-5https://read.douban.com/ebook/31358183/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 愿无岁月可回头 回忆专用小马甲 2016-9https://read.douban.com/ebook/31341636/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 走神的艺术与科学 [新西兰]迈克尔·C.科尔巴里斯 2017-3-1https://read.douban.com/ebook/27621094/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 神秘的量子生命 [英]吉姆•艾尔－哈利利/约翰乔•麦克法登 2016-8https://read.douban.com/ebook/31221966/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 寻找时间的人 [爱尔兰]凯特·汤普森 2017-3https://read.douban.com/ebook/31481323/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 山之四季 [日]高村光太郎 2017-1https://read.douban.com/ebook/31154855/?dcs=book-hot&amp;amp;dcm=douban&amp;amp;dct=read-subject 东北游记 [美]迈克尔·麦尔 2017-1</code></pre>]]></content>
      
      
      <categories>
          
          <category> 正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
            <tag> Python re模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关系型数据库与非关系型数据库</title>
      <link href="/2019/01/20/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/01/20/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>&ensp; &ensp; <strong>写在前面：</strong>关系型数据库主要有 SQL Server、MySQL、Hive-SQL、Oracle、Postgresql 及 spark 和 flink 等支持 SQL 语法的数据库。非关系型数据库通常指以 Hbase、MongoDB、Redis等为代表的不能支持SQL的数据库。不仅两类差异很大，同类也有差异。</p><p>&ensp; &ensp; 收集汇总网上各路大神总结经验，包含结构化数据和非结构化数据区别，列存储和行存储区别，及主流7种数据库区别。待有时间再做整理。</p><p>结构化、半结构化和非结构化数据 <a href="https://blog.csdn.net/xuanjiewu/article/details/70171463" target="_blank" rel="noopener">https://blog.csdn.net/xuanjiewu/article/details/70171463</a><br>行式存储和列式存储的区别 <a href="https://www.jianshu.com/p/3d3950c9fb06" target="_blank" rel="noopener">https://www.jianshu.com/p/3d3950c9fb06</a><br>7种数据库的分析 <a href="https://blog.csdn.net/hzp666/article/details/79168675" target="_blank" rel="noopener">https://blog.csdn.net/hzp666/article/details/79168675</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 结构化数据 非结构化数据 </tag>
            
            <tag> 列存储 行存储 </tag>
            
            <tag> 关系型数据库 非关系型数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关系型数据库数据类型</title>
      <link href="/2019/01/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/01/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<p>&ensp; &ensp; <strong>写在前面：</strong>提起数据库，一般意义上指存储结构化数据的关系型数据库，主要有 SQL Server、MySQL、Hive-SQL、Oracle、Postgresql 及 spark 和 flink 等支持 SQL 语法的数据库。工作中业务需求变动需要对不同数据库数据进行调度，除了掌握调度方法，要多关注不同数据库数据类型区别。<br><br></p><h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><h2 id="Character-字符串"><a href="#Character-字符串" class="headerlink" title="Character 字符串"></a>Character 字符串</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">char(n)</td><td style="text-align:left">固定长度的字符串。最多 8,000 个字符。</td></tr><tr><td style="text-align:left">varchar(n)</td><td style="text-align:left">可变长度的字符串。最多 8,000 个字符。</td></tr><tr><td style="text-align:left">varchar(max)</td><td style="text-align:left">可变长度的字符串。最多 1,073,741,824 个字符。</td></tr><tr><td style="text-align:left">text</td><td style="text-align:left">可变长度的字符串。最多 2GB 字符数据。</td></tr></tbody></table></div><h2 id="Unicode-字符串"><a href="#Unicode-字符串" class="headerlink" title="Unicode 字符串"></a>Unicode 字符串</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">nchar(n)</td><td style="text-align:left">固定长度的 Unicode 数据。最多 4,000 个字符。     </td></tr><tr><td style="text-align:left">nvarchar(n)</td><td style="text-align:left">可变长度的 Unicode 数据。最多 4,000 个字符。     </td></tr><tr><td style="text-align:left">nvarchar(max)</td><td style="text-align:left">可变长度的 Unicode 数据。最多 536,870,912 个字符。     </td></tr><tr><td style="text-align:left">ntext</td><td style="text-align:left">可变长度的 Unicode 数据。最多 2GB 字符数据。     </td></tr></tbody></table></div><h2 id="Binary-类型"><a href="#Binary-类型" class="headerlink" title="Binary 类型"></a>Binary 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">bit</td><td style="text-align:left">允许 0、1 或 NULL     </td></tr><tr><td style="text-align:left">binary(n)</td><td style="text-align:left">固定长度的二进制数据。最多 8,000 字节。     </td></tr><tr><td style="text-align:left">varbinary(n)</td><td style="text-align:left">可变长度的二进制数据。最多 8,000 字节。     </td></tr><tr><td style="text-align:left">varbinary(max)</td><td style="text-align:left">可变长度的二进制数据。最多 2GB 字节。     </td></tr><tr><td style="text-align:left">image</td><td style="text-align:left">可变长度的二进制数据。最多 2GB。</td></tr></tbody></table></div><h2 id="Number-类型"><a href="#Number-类型" class="headerlink" title="Number 类型"></a>Number 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">tinyint</td><td style="text-align:left">允许从 0 到 255 的所有数字。</td></tr><tr><td style="text-align:left">smallint</td><td style="text-align:left">允许从 -32,768 到 32,767 的所有数字。</td></tr><tr><td style="text-align:left">int</td><td style="text-align:left">允许从 -2,147,483,648 到 2,147,483,647 的所有数字。</td></tr><tr><td style="text-align:left">bigint</td><td style="text-align:left">允许介于 -9,223,372,036,854,775,808 和 9,223,372,036,854,775,807 之间的所有数字。</td></tr><tr><td style="text-align:left">decimal(p,s)</td><td style="text-align:left">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。<br>p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。<br>s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td></tr><tr><td style="text-align:left">numeric(p,s)</td><td style="text-align:left">固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。<br>p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。<br>s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td></tr><tr><td style="text-align:left">smallmoney</td><td style="text-align:left">介于 -214,748.3648 和 214,748.3647 之间的货币数据。</td></tr><tr><td style="text-align:left">money</td><td style="text-align:left">介于 -922,337,203,685,477.5808 和 922,337,203,685,477.5807 之间的货币数据。</td></tr><tr><td style="text-align:left">float(n)</td><td style="text-align:left">从 -1.79E + 308 到 1.79E + 308 的浮动精度数字数据。 <br>参数 n 指示该字段保存 4 字节还是 8 字节。<br>float(24) 保存 4 字节，而 float(53) 保存 8 字节。n 的默认值是 53。</td></tr><tr><td style="text-align:left">real</td><td style="text-align:left">从 -3.40E + 38 到 3.40E + 38 的浮动精度数字数据。</td></tr></tbody></table></div><h2 id="Date-类型"><a href="#Date-类型" class="headerlink" title="Date 类型"></a>Date 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">datetime</td><td style="text-align:left">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 3.33 毫秒。</td></tr><tr><td style="text-align:left">datetime2</td><td style="text-align:left">从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 100 纳秒。</td></tr><tr><td style="text-align:left">smalldatetime</td><td style="text-align:left">从 1900 年 1 月 1 日 到 2079 年 6 月 6 日，精度为 1 分钟。</td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。</td></tr><tr><td style="text-align:left">time</td><td style="text-align:left">仅存储时间。精度为 100 纳秒。    3-5 bytes</td></tr><tr><td style="text-align:left">datetimeoffset</td><td style="text-align:left">与 datetime2 相同，外加时区偏移。</td></tr><tr><td style="text-align:left">timestamp</td><td style="text-align:left">存储唯一的数字，每当创建或修改某行时，该数字会更新。timestamp 基于内部时钟，不对应真实时间。每个表只能有一个 timestamp 变量。</td></tr></tbody></table></div><h2 id="其他数据类型"><a href="#其他数据类型" class="headerlink" title="其他数据类型"></a>其他数据类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">sql_variant</td><td style="text-align:left">存储最多 8,000 字节不同数据类型的数据，除了 text、ntext 以及 timestamp。</td></tr><tr><td style="text-align:left">uniqueidentifier</td><td style="text-align:left">存储全局标识符 (GUID)。</td></tr><tr><td style="text-align:left">xml</td><td style="text-align:left">存储 XML 格式化数据。最多 2GB。</td></tr><tr><td style="text-align:left">cursor</td><td style="text-align:left">存储对用于数据库操作的指针的引用。</td></tr><tr><td style="text-align:left">table</td><td style="text-align:left">存储结果集，供稍后处理。</td></tr></tbody></table></div><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="Text-类型"><a href="#Text-类型" class="headerlink" title="Text 类型"></a>Text 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">CHAR(size)</td><td style="text-align:left">保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td></tr><tr><td style="text-align:left">VARCHAR(size)</td><td style="text-align:left">保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。<br>注释：如果值的长度大于 255，则被转换为 TEXT 类型。</td></tr><tr><td style="text-align:left">TINYTEXT</td><td style="text-align:left">存放最大长度为 255 个字符的字符串。</td></tr><tr><td style="text-align:left">TEXT</td><td style="text-align:left">存放最大长度为 65,535 个字符的字符串。</td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">用于 BLOBs (Binary Large OBjects)。存放最多 65,535 字节的数据。</td></tr><tr><td style="text-align:left">MEDIUMTEXT</td><td style="text-align:left">存放最大长度为 16,777,215 个字符的字符串。</td></tr><tr><td style="text-align:left">MEDIUMBLOB</td><td style="text-align:left">用于 BLOBs (Binary Large OBjects)。存放最多 16,777,215 字节的数据。</td></tr><tr><td style="text-align:left">LONGTEXT</td><td style="text-align:left">存放最大长度为 4,294,967,295 个字符的字符串。</td></tr><tr><td style="text-align:left">LONGBLOB</td><td style="text-align:left">用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td></tr><tr><td style="text-align:left">ENUM(x,y,z,etc.)</td><td style="text-align:left">允许你输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。<br>注释：这些值是按照你输入的顺序存储的。可以按照此格式输入可能的值：ENUM(‘X’,’Y’,’Z’)</td></tr><tr><td style="text-align:left">SET</td><td style="text-align:left">与 ENUM 类似，SET 最多只能包含 64 个列表项，不过 SET 可存储一个以上的值。</td></tr></tbody></table></div><h2 id="Number-类型-1"><a href="#Number-类型-1" class="headerlink" title="Number 类型"></a>Number 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">TINYINT(size)</td><td style="text-align:left">-128 到 127 常规。0 到 255 无符号*。在括号中规定最大位数。</td></tr><tr><td style="text-align:left">SMALLINT(size)</td><td style="text-align:left">-32768 到 32767 常规。0 到 65535 无符号*。在括号中规定最大位数。</td></tr><tr><td style="text-align:left">MEDIUMINT(size)</td><td style="text-align:left">-8388608 到 8388607 普通。0 to 16777215 无符号*。在括号中规定最大位数。</td></tr><tr><td style="text-align:left">INT(size)</td><td style="text-align:left">-2147483648 到 2147483647 常规。0 到 4294967295 无符号*。在括号中规定最大位数。</td></tr><tr><td style="text-align:left">BIGINT(size)</td><td style="text-align:left">-9223372036854775808 到 9223372036854775807 常规。0 到 18446744073709551615 无符号*。在括号中规定最大位数。</td></tr><tr><td style="text-align:left">FLOAT(size,d)</td><td style="text-align:left">带有浮动小数点的小数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。</td></tr><tr><td style="text-align:left">DOUBLE(size,d)</td><td style="text-align:left">带有浮动小数点的大数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。</td></tr><tr><td style="text-align:left">DECIMAL(size,d)</td><td style="text-align:left">作为字符串存储的 DOUBLE 类型，允许固定的小数点。</td></tr></tbody></table></div><p>* 这些整数类型拥有额外的选项 UNSIGNED。通常，整数可以是负数或正数。如果添加 UNSIGNED 属性，那么范围将从 0 开始，而不是某个负数。</p><h2 id="Date-类型-1"><a href="#Date-类型-1" class="headerlink" title="Date 类型"></a>Date 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">DATE()</td><td style="text-align:left">日期。格式：YYYY-MM-DD <br>注释：支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td></tr><tr><td style="text-align:left">DATETIME()</td><td style="text-align:left">*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS <br>注释：支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td></tr><tr><td style="text-align:left">TIMESTAMP()</td><td style="text-align:left">*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的描述来存储。格式：YYYY-MM-DD HH:MM:SS <br>注释：支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td></tr><tr><td style="text-align:left">TIME()</td><td style="text-align:left">时间。格式：HH:MM:SS <br>注释：支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td></tr><tr><td style="text-align:left">YEAR()</td><td style="text-align:left">2 位或 4 位格式的年。<br>注释：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td></tr></tbody></table></div><h1 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h1><h2 id="Number-类型-2"><a href="#Number-类型-2" class="headerlink" title="Number 类型"></a>Number 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">长度</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">TINYINT</td><td style="text-align:left">1字节</td><td style="text-align:left">有符号整型</td></tr><tr><td style="text-align:left">SMALLINT</td><td style="text-align:left">2字节</td><td style="text-align:left">有符号整型</td></tr><tr><td style="text-align:left">INT</td><td style="text-align:left">4字节</td><td style="text-align:left">有符号整型</td></tr><tr><td style="text-align:left">BIGINT</td><td style="text-align:left">8字节</td><td style="text-align:left">有符号整型</td></tr><tr><td style="text-align:left">FLOAT</td><td style="text-align:left">4字节</td><td style="text-align:left">有符号单精度浮点数</td></tr><tr><td style="text-align:left">DOUBLE</td><td style="text-align:left">8字节</td><td style="text-align:left">有符号双精度浮点数</td></tr><tr><td style="text-align:left">DECIMAL</td><td style="text-align:left">—</td><td style="text-align:left">可带小数的精确数字字符串</td></tr></tbody></table></div><h2 id="Date-类型-2"><a href="#Date-类型-2" class="headerlink" title="Date 类型"></a>Date 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">长度</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">TIMESTAMP</td><td style="text-align:left">—</td><td style="text-align:left">时间戳，内容格式：yyyy-mm-dd hh:mm:ss[.f…]</td></tr><tr><td style="text-align:left">DATE</td><td style="text-align:left">—</td><td style="text-align:left">日期，内容格式：YYYY­MM­DD</td></tr><tr><td style="text-align:left">INTERVAL</td><td style="text-align:left">—</td><td style="text-align:left">间隔时间</td></tr></tbody></table></div><h2 id="String-类型"><a href="#String-类型" class="headerlink" title="String 类型"></a>String 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">长度</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">STRING</td><td style="text-align:left">—</td><td style="text-align:left">字符串</td></tr><tr><td style="text-align:left">VARCHAR</td><td style="text-align:left">字符数范围1 - 65535</td><td style="text-align:left">长度不定字符串</td></tr><tr><td style="text-align:left">CHAR</td><td style="text-align:left">最大的字符数：255</td><td style="text-align:left">长度固定字符串</td></tr></tbody></table></div><h2 id="Misc-类型"><a href="#Misc-类型" class="headerlink" title="Misc 类型"></a>Misc 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">长度</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">BOOLEAN</td><td style="text-align:left">—</td><td style="text-align:left">布尔类型 TRUE/FALSE</td></tr><tr><td style="text-align:left">BINARY</td><td style="text-align:left">—</td><td style="text-align:left">字节序列</td></tr></tbody></table></div><h2 id="复合类"><a href="#复合类" class="headerlink" title="复合类"></a>复合类</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">长度</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">ARRAY</td><td style="text-align:left">—</td><td style="text-align:left">包含同类型元素的数组，索引从0开始 ARRAY</td></tr><tr><td style="text-align:left">MAP</td><td style="text-align:left">—</td><td style="text-align:left">字典 <code>MAP&lt;primitive_type, data_type&gt;</code></td></tr><tr><td style="text-align:left">STRUCT</td><td style="text-align:left">—</td><td style="text-align:left">结构体 <code>STRUCT&lt;col_name : data_type [COMMENT col_comment], ...&gt;</code></td></tr><tr><td style="text-align:left">UNIONTYPE</td><td style="text-align:left">—</td><td style="text-align:left">联合体 <code>UNIONTYPE&lt;data_type, data_type, ...&gt;</code></td></tr></tbody></table></div><h1 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h1><div class="table-container"><table><thead><tr><th style="text-align:left">字段类型</th><th style="text-align:left">中文说明</th><th style="text-align:left">限制条件</th><th style="text-align:left">其它说明</th></tr></thead><tbody><tr><td style="text-align:left">CHAR</td><td style="text-align:left">固定长度字符串</td><td style="text-align:left">最大长度2000 bytes</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">VARCHAR2</td><td style="text-align:left">可变长度的字符串</td><td style="text-align:left">最大长度4000 bytes</td><td style="text-align:left">可做索引的最大长度749</td></tr><tr><td style="text-align:left">NCHAR</td><td style="text-align:left">根据字符集而定的固定长度字符串</td><td style="text-align:left">最大长度2000 bytes</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">NVARCHAR2</td><td style="text-align:left">根据字符集而定的可变长度字符串</td><td style="text-align:left">最大长度4000 bytes</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DATE</td><td style="text-align:left">日期（日-月-年）</td><td style="text-align:left">DD-MM-YY（HH-MI-SS）</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">LONG</td><td style="text-align:left">超长字符串</td><td style="text-align:left">最大长度2G（231-1）    足够存储大部头著作</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">RAW</td><td style="text-align:left">固定长度的二进制数据</td><td style="text-align:left">最大长度2000 bytes</td><td style="text-align:left">可存放多媒体图象声音等</td></tr><tr><td style="text-align:left">LONG RAW</td><td style="text-align:left">可变长度的二进制数据</td><td style="text-align:left">最大长度2G</td><td style="text-align:left">同上    </td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">二进制数据</td><td style="text-align:left">最大长度4G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">CLOB</td><td style="text-align:left">字符数据</td><td style="text-align:left">最大长度4G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">NCLOB</td><td style="text-align:left">根据字符集而定的字符数据</td><td style="text-align:left">最大长度4G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">BFILE</td><td style="text-align:left">存放在数据库外的二进制数据</td><td style="text-align:left">最大长度4G</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">ROWID</td><td style="text-align:left">数据表中记录的唯一行号</td><td style="text-align:left">10 bytes</td><td style="text-align:left">********.****.****格式，*为0或1</td></tr><tr><td style="text-align:left">NROWID</td><td style="text-align:left">二进制数据表中记录的唯一行号</td><td style="text-align:left">最大长度4000 bytes    </td></tr><tr><td style="text-align:left">NUMBER(P,S)</td><td style="text-align:left">数字类型</td><td style="text-align:left">P为总位数，S为小数位数</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DECIMAL(P,S)</td><td style="text-align:left">数字类型</td><td style="text-align:left">P为总位数，S为小数位数</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">INTEGER</td><td style="text-align:left">整数类型</td><td style="text-align:left">小的整数</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">FLOAT</td><td style="text-align:left">浮点数类型</td><td style="text-align:left">NUMBER(38)，双精度</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">REAL</td><td style="text-align:left">实数类型</td><td style="text-align:left">NUMBER(63)，精度更高</td><td style="text-align:left"></td></tr></tbody></table></div><h1 id="SparkSQL"><a href="#SparkSQL" class="headerlink" title="SparkSQL"></a>SparkSQL</h1><h2 id="Number-类型-3"><a href="#Number-类型-3" class="headerlink" title="Number 类型"></a>Number 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">说明</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">ByteType</td><td style="text-align:left">代表一个字节的整数。</td><td style="text-align:left">范围是-128到127</td></tr><tr><td style="text-align:left">ShortType</td><td style="text-align:left">代表两个字节的整数。</td><td style="text-align:left">范围是-32768到32767</td></tr><tr><td style="text-align:left">IntegerType</td><td style="text-align:left">代表4个字节的整数。</td><td style="text-align:left">范围是-2147483648到2147483647</td></tr><tr><td style="text-align:left">LongType</td><td style="text-align:left">代表8个字节的整数。</td><td style="text-align:left">范围是-9223372036854775808到9223372036854775807</td></tr><tr><td style="text-align:left">FloatType</td><td style="text-align:left">代表4字节的单精度浮点数</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DoubleType</td><td style="text-align:left">代表8字节的双精度浮点数</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DecimalType</td><td style="text-align:left">代表任意精度的10进制数据。</td><td style="text-align:left">通过内部的java.math.BigDecimal支持。<br>BigDecimal由一个任意精度的整型非标度值和一个32位整数组成。</td></tr><tr><td style="text-align:left">StringType</td><td style="text-align:left">代表一个字符串值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">BinaryType</td><td style="text-align:left">代表一个byte序列值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">BooleanType</td><td style="text-align:left">代表boolean值</td><td style="text-align:left"></td></tr></tbody></table></div><h2 id="Date-类型-3"><a href="#Date-类型-3" class="headerlink" title="Date 类型"></a>Date 类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">说明    </th></tr></thead><tbody><tr><td style="text-align:left">TimestampType</td><td style="text-align:left">代表包含字段年，月，日，时，分，秒的值</td></tr><tr><td style="text-align:left">DateType</td><td style="text-align:left">代表包含字段年，月，日的值</td></tr></tbody></table></div><h2 id="复杂类型"><a href="#复杂类型" class="headerlink" title="复杂类型"></a>复杂类型</h2><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">ArrayType(elementType, containsNull)</td><td style="text-align:left">代表由elementType类型元素组成的序列值。containsNull用来指明ArrayType中的值是否有null值。</td></tr><tr><td style="text-align:left">MapType(keyType, valueType, valueContainsNull)</td><td style="text-align:left">表示包括一组键 - 值对的值。通过keyType表示key数据的类型，通过valueType表示value数据的类型。<br>valueContainsNull用来指明MapType中的值是否有null值。</td></tr><tr><td style="text-align:left">StructType(fields)</td><td style="text-align:left">表示一个拥有StructFields (fields)序列结构的值。 </td></tr><tr><td style="text-align:left">StructField(name, dataType, nullable)</td><td style="text-align:left">代表StructType中的一个字段，字段的名字通过name指定，dataType指定field的数据类型，nullable表示字段的值是否有null值。</td></tr></tbody></table></div><p><br><br><strong>参考来源：</strong><br><a href="http://www.w3school.com.cn/sql/sql_datatypes.asp" target="_blank" rel="noopener">SQL MySQL数据类型</a><br><a href="https://blog.csdn.net/thomson617/article/details/87792545" target="_blank" rel="noopener">Oracle数据类型</a><br><a href="https://blog.csdn.net/maizi1045/article/details/79710406" target="_blank" rel="noopener">Hive数据类型</a><br><a href="https://docs.microsoft.com/zh-cn/sql/sql-server/sql-server-technical-documentation?view=sql-server-2017" target="_blank" rel="noopener">SQL官方手册</a><br><a href="https://dev.mysql.com/doc/refman/8.0/en/programs.html" target="_blank" rel="noopener">MySQL官方手册</a><br><a href="https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types#LanguageManualTypes-Intervals" target="_blank" rel="noopener">Hive官方手册</a><br><a href="https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/SELECT.html#GUID-CFA006CA-6FF1-4972-821E-6996142A51C6" target="_blank" rel="noopener">Oracle官方手册</a><br><a href="http://spark.apache.org/docs/latest/sql-getting-started.html" target="_blank" rel="noopener">Spark官方手册</a><br><a href="https://ci.apache.org/projects/flink/flink-docs-release-1.7/" target="_blank" rel="noopener">Flink官方手册</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库-数据类型 </tag>
            
            <tag> SQL </tag>
            
            <tag> mysql </tag>
            
            <tag> hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown-Hexo语法汇总</title>
      <link href="/2019/01/15/Markdown-Hexo%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/"/>
      <url>/2019/01/15/Markdown-Hexo%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>&ensp; &ensp; <strong>写在前面：</strong> Hexo 兼容 Markdown 大部分功能，基本满足写文章需求。但 Markdown 不足以支撑更复杂的页面设计功能，更多需求需通过 HTML、CSS、JS。</p><h1 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h1><p>使用 <code>#</code> 或 <code>-</code> 标记<br><figure class="highlight plain"><figcaption><span>标题</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><br><img src="/2019/01/15/Markdown-Hexo语法汇总/title.png" alt></p><h1 id="2-段落"><a href="#2-段落" class="headerlink" title="2. 段落"></a>2. 段落</h1><p>Markdown 默认段落的换行是使用两个以上空格加上回车，hexo 对此有优化，所以即使不加空格仅使用回车依旧可以实现换行功能。<br>首行缩进 <code>&amp;ensp; //相当于1个中文，2字节</code></p><h2 id="2-1-字体"><a href="#2-1-字体" class="headerlink" title="2.1 字体"></a>2.1 字体</h2><figure class="highlight plain"><figcaption><span>字体</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">浮生六记  </span><br><span class="line">*斜体文本*   </span><br><span class="line">**粗体文本**   </span><br><span class="line">***粗斜体文本***   </span><br></pre></td></tr></table></figure>  <p>浮生六记<br><em>浮生六记</em><br><strong>浮生六记</strong><br><strong><em>浮生六记</em></strong>   </p><h2 id="2-2-分隔线"><a href="#2-2-分隔线" class="headerlink" title="2.2 分隔线"></a>2.2 分隔线</h2><figure class="highlight plain"><figcaption><span>分割线</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">* * *</span><br><span class="line">***** </span><br></pre></td></tr></table></figure><hr><hr><hr><h2 id="2-3-删除线"><a href="#2-3-删除线" class="headerlink" title="2.3 删除线"></a>2.3 删除线</h2><figure class="highlight plain"><figcaption><span>分割线</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">浮生六记  </span><br><span class="line">~~浮生六记~~  </span><br></pre></td></tr></table></figure><p>浮生六记<br><del>浮生六记</del> </p><h2 id="2-4-下划线"><a href="#2-4-下划线" class="headerlink" title="2.4 下划线"></a>2.4 下划线</h2><p>可用 HTML <code>&lt;u&gt;……&lt;/u&gt;</code> 实现下划线功能<br><figure class="highlight plain"><figcaption><span>下划线</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;浮生六记&lt;/u&gt;好棒啊</span><br></pre></td></tr></table></figure><br><u>浮生六记</u>好棒啊</p><h2 id="2-5-脚注-amp-超链接"><a href="#2-5-脚注-amp-超链接" class="headerlink" title="2.5 脚注&amp;超链接"></a>2.5 脚注&amp;超链接</h2><p>Markdown 脚注语法在 hexo 不兼容，此处用超链接加文字功能实现鼠标悬于上方显示想要文字。<br><figure class="highlight plain"><figcaption><span>脚注&超链接</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[^浮生六记]  </span><br><span class="line">[^浮生六记]: 老沈贼厉害！！！</span><br><span class="line"></span><br><span class="line">[浮生六记](https://www.pfchen.top &quot;老沈贼厉害！！！&quot;)</span><br></pre></td></tr></table></figure><br><a href="https://www.pfchen.top" title="老沈贼厉害！！！" target="_blank" rel="noopener">浮生六记</a></p><h1 id="3-列表"><a href="#3-列表" class="headerlink" title="3. 列表"></a>3. 列表</h1><h2 id="3-1-有序列表和无序列表"><a href="#3-1-有序列表和无序列表" class="headerlink" title="3.1 有序列表和无序列表"></a>3.1 有序列表和无序列表</h2><p>Markdown 支持有序列表和无序列表。<br>无序列表使用星号 <code>*</code>、加号 <code>+</code> 或是减号 <code>-</code> 作为列表标记：<br><figure class="highlight plain"><figcaption><span>无序列表</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* 浮生一记</span><br><span class="line">* 浮生二记</span><br><span class="line">* 浮生三记</span><br><span class="line">+ 浮生一记</span><br><span class="line">+ 浮生二记</span><br><span class="line">+ 浮生三记</span><br><span class="line">- 浮生一记</span><br><span class="line">- 浮生二记</span><br><span class="line">- 浮生三记</span><br></pre></td></tr></table></figure></p><ul><li>浮生一记</li><li>浮生二记</li><li>浮生三记</li></ul><ul><li>浮生一记</li><li>浮生二记</li><li>浮生三记</li></ul><ul><li>浮生一记</li><li>浮生二记</li><li>浮生三记</li></ul><p>有序列表使用数字并加上 <code>.</code> 号来表示，如：<br><figure class="highlight plain"><figcaption><span>有序列表</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 浮生一记</span><br><span class="line">2. 浮生二记</span><br><span class="line">3. 浮生三记</span><br></pre></td></tr></table></figure></p><ol><li>浮生一记</li><li>浮生二记</li><li>浮生三记</li></ol><h2 id="3-2-列表嵌套"><a href="#3-2-列表嵌套" class="headerlink" title="3.2 列表嵌套"></a>3.2 列表嵌套</h2><p>列表嵌套只需在子列表中的选项添加四个空格即可。<br><figure class="highlight plain"><figcaption><span>列表嵌套</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 浮生一记：</span><br><span class="line">    - 一一记</span><br><span class="line">    - 一二记</span><br><span class="line">2. 浮生二记：</span><br><span class="line">    - 二一记</span><br><span class="line">    - 二二记</span><br></pre></td></tr></table></figure></p><ol><li>浮生一记：<ul><li>一一记</li><li>一二记</li></ul></li><li>浮生二记：<ul><li>二一记</li><li>二二记</li></ul></li></ol><h1 id="4-区块"><a href="#4-区块" class="headerlink" title="4. 区块"></a>4. 区块</h1><figure class="highlight plain"><figcaption><span>区块&列表嵌套</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; 浮生六记：</span><br><span class="line">&gt; &gt; 卷一《闺房记乐》  </span><br><span class="line">&gt; &gt; 卷二《闲情记趣》  </span><br><span class="line">&gt; &gt; 卷三《坎坷记愁》  </span><br><span class="line">&gt; &gt; 卷四《浪游记快》  </span><br><span class="line">&gt; &gt; 卷五《中山记历》 </span><br><span class="line">&gt; &gt; * 佚失  </span><br><span class="line">   </span><br><span class="line">&gt; &gt; 卷六《养生记道》</span><br><span class="line">&gt; &gt; * 佚失</span><br></pre></td></tr></table></figure> <blockquote><p>浮生六记：</p><blockquote><p>卷一《闺房记乐》<br>卷二《闲情记趣》<br>卷三《坎坷记愁》<br>卷四《浪游记快》<br>卷五《中山记历》 </p><ul><li>佚失  </li></ul><p>卷六《养生记道》</p><ul><li>佚失</li></ul></blockquote></blockquote><h1 id="5-代码"><a href="#5-代码" class="headerlink" title="5. 代码"></a>5. 代码</h1><figure class="highlight plain"><figcaption><span>函数&代码片段</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`printf()` 函数</span><br></pre></td></tr></table></figure><p><code>printf()</code> 函数 </p><p>Hexo-Text如下方式打印代码区块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock 代码区块 lang:语言名称 %&#125;</span><br><span class="line"> $(document).ready(function () &#123;</span><br><span class="line">     alert(&apos;RUNOOB&apos;);</span><br><span class="line"> &#125;);</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><figcaption><span>代码区块</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'RUNOOB'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Markdown 用如下方式打印代码区块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```javascript 语言名称(代码标颜色)</span><br><span class="line">$(document).ready(function () &#123;</span><br><span class="line">    alert(&apos;RUNOOB&apos;);</span><br><span class="line">&#125;);</span><br><span class="line">```</span><br></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'RUNOOB'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="6-链接"><a href="#6-链接" class="headerlink" title="6. 链接"></a>6. 链接</h1><h2 id="6-1-普通链接"><a href="#6-1-普通链接" class="headerlink" title="6.1 普通链接"></a>6.1 普通链接</h2><figure class="highlight plain"><figcaption><span>普通链接</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[链接名称](链接地址 &quot;悬浮命名&quot;)</span><br><span class="line">或者</span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><p><a href="http://pfchen.top/" title="http://pfchen.top/">浮 · 生</a><br><a href="http://pfchen.top/">http://pfchen.top/</a></p><h2 id="6-2-高级链接"><a href="#6-2-高级链接" class="headerlink" title="6.2 高级链接"></a>6.2 高级链接</h2><figure class="highlight plain"><figcaption><span>高级链接</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">链接也可以用变量来代替，文档末尾附带变量地址：</span><br><span class="line">这个链接用 1 作为网址变量 [Google][1]</span><br><span class="line">这个链接用 runoob 作为网址变量 [Runoob][runoob]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: http://www.google.com/</span><br><span class="line">[runoob]: http://www.runoob.com/</span><br></pre></td></tr></table></figure><p>链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a><br>这个链接用 runoob 作为网址变量 <a href="http://www.runoob.com/" target="_blank" rel="noopener">Runoob</a><br>然后在文档的结尾为变量赋值（网址）</p><h1 id="7-图片"><a href="#7-图片" class="headerlink" title="7. 图片"></a>7. 图片</h1><figure class="highlight plain"><figcaption><span>图片</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![](Markdown-Hexo语法汇总/maomi.jpeg)</span><br><span class="line">![头像](Markdown-Hexo语法汇总/maomi.jpeg &quot;头像素材&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2019/01/15/Markdown-Hexo语法汇总/maomi.jpeg" alt="随意"> <img src="/2019/01/15/Markdown-Hexo语法汇总/maomi.jpeg" alt="头像" title="头像素材"></p><figure class="highlight plain"><figcaption><span>图片调整</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;Markdown语法汇总-hexo/maomi.jpeg&quot; width=&quot;10%&quot;; height=&quot;10%&quot;; style=&quot; margin-top:5px; margin-left:100px&quot;&gt;</span><br><span class="line">&lt;img src=&quot;Markdown语法汇总-hexo/maomi.jpeg&quot; width=&quot;10%&quot;; height=&quot;10%&quot;; style=&quot;position:absolute; margin-top:-160px; margin-left:300px&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/15/Markdown-Hexo语法汇总/maomi.jpeg" width="10%" ; height="10%" style=" margin-top:5px; margin-left:100px"><br><img src="/2019/01/15/Markdown-Hexo语法汇总/maomi.jpeg" width="10%" ; height="10%" style="position:absolute; margin-top:-160px; margin-left:300px"></p><h1 id="8-表格"><a href="#8-表格" class="headerlink" title="8. 表格"></a>8. 表格</h1><figure class="highlight plain"><figcaption><span>表格</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></div><figure class="highlight plain"><figcaption><span>表格对齐</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 表头1 | 表头2 | 表头3 | 表头4 |</span><br><span class="line">| --- | :-- | :--: | --: |</span><br><span class="line">| 默认左对齐 | 左对齐 | 居中对其 | 右对齐 |</span><br><span class="line">| 默认左对齐 | 左对齐 | 居中对其 | 右对齐 |</span><br><span class="line">| 默认左对齐 | 左对齐 | 居中对其 | 右对齐 |</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>表头1</th><th style="text-align:left">表头2</th><th style="text-align:center">表头3</th><th style="text-align:right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对其</td><td style="text-align:right">右对齐</td></tr></tbody></table></div><h1 id="9-高级技巧"><a href="#9-高级技巧" class="headerlink" title="9. 高级技巧"></a>9. 高级技巧</h1><h2 id="9-1-支持-HTML-元素"><a href="#9-1-支持-HTML-元素" class="headerlink" title="9.1 支持 HTML 元素"></a>9.1 支持 HTML 元素</h2><p>支持部分 HTML 元素，Hexo 可直接写 HTML、JS、CSS 等<br>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：<br><figure class="highlight plain"><figcaption><span>支持HTML元素</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><br>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h2 id="9-2-转义"><a href="#9-2-转义" class="headerlink" title="9.2 转义"></a>9.2 转义</h2><figure class="highlight plain"><figcaption><span>转义</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**文本加粗** </span><br><span class="line">\*\* 文本加粗 \*\*</span><br><span class="line">`** 文本加粗 **`</span><br><span class="line">\`</span><br></pre></td></tr></table></figure><p><strong>文本加粗</strong><br>** 文本加粗 **<br><code>** 文本加粗 **</code><br>`</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure></p><h2 id="9-3-公式"><a href="#9-3-公式" class="headerlink" title="9.3 公式"></a>9.3 公式</h2><p>markdown 支持数学公式，但是 hexo 默认的渲染引擎 marked 不支持 mathjax ，所以需要更换 Hexo 的 markdown 渲染引擎为 hexo-renderer-kramed 引擎，后者支持 mathjax 公式输出。具体教程可参考 <a href="https://www.jianshu.com/p/68e6f82d88b7" target="_blank" rel="noopener">AomanHao</a>。<br><figure class="highlight plain"><figcaption><span>公式</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 =  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br><span class="line">$$sqrt()$$</span><br></pre></td></tr></table></figure></p><script type="math/tex; mode=display">\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} & \mathbf{j} & \mathbf{k} \\\frac{\partial X}{\partial u} &  \frac{\partial Y}{\partial u} & 0 \\\frac{\partial X}{\partial v} &  \frac{\partial Y}{\partial v} & 0 \\\end{vmatrix}</script><script type="math/tex; mode=display">sqrt()</script><p><br><br><strong>参考来源：</strong><br><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程-Markdown</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown-Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
